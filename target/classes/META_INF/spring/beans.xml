<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <!-- 1. 数据源 : DriverManagerDataSource -->
       <bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="url" value="jdbc:mysql://localhost:3306/mybatis"/>
            <property name="username" value="root"/>
            <property name="password" value="root"/>
           <property name="driverClassName" value="com.mysql.jdbc.Driver"/>

       </bean>
    <!-- 2. mybatis 的 SqlSession 的工厂: SqlSessionFactoryBean
           dataSource:引用数据源
           typeAliasesPackage：指定实体类的包名，自动将尸体的简单类名映射成别名
    -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="ds"/>
            <property name="typeAliasesPackage" value="org.whut.mybatis_spring.entity"/>
        </bean>
    <!-- 3. mybatis 自动扫描加载 Sql 映射文件/接口 : MapperScannerConfigurer
           basePackage: 指定Sql映射文件/接口所在的包（自动扫描）
           sqlSessionFactory:引用上面定义的sqlSessionFactory
    -->
          <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <property name="basePackage" value="org.whut.mybatis_spring.mapper"/>
              <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
          </bean>
    <!-- 4. 事务管理 : DataSourceTransactionManager
      dataSource：引用上面定义的数据源
     -->
           <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
               <property name="dataSource" ref="ds"/>
           </bean>
    <!-- 5. 使用声明式事务
             transaction-manager:引用上面定义的事务管理器
     -->
    <tx:annotation-driven transaction-manager="txManager"/>


</beans>